// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMessageClientInterface is a mock of MessageClientInterface interface.
type MockMessageClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageClientInterfaceMockRecorder
}

// MockMessageClientInterfaceMockRecorder is the mock recorder for MockMessageClientInterface.
type MockMessageClientInterfaceMockRecorder struct {
	mock *MockMessageClientInterface
}

// NewMockMessageClientInterface creates a new mock instance.
func NewMockMessageClientInterface(ctrl *gomock.Controller) *MockMessageClientInterface {
	mock := &MockMessageClientInterface{ctrl: ctrl}
	mock.recorder = &MockMessageClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageClientInterface) EXPECT() *MockMessageClientInterfaceMockRecorder {
	return m.recorder
}

// SendMessage mocks base method.
func (m *MockMessageClientInterface) SendMessage(channel, message string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMessage", channel, message)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendMessage indicates an expected call of SendMessage.
func (mr *MockMessageClientInterfaceMockRecorder) SendMessage(channel, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*MockMessageClientInterface)(nil).SendMessage), channel, message)
}

